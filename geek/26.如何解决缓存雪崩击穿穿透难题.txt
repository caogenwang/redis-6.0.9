除了数据不一致问题，我们常常还会面临缓存异常的三个问题，分别是缓存雪崩、缓存击穿和缓存穿透

1. 缓存雪崩
    缓存雪崩是指大量的应用请求无法在Redis缓存中进行处理，紧接着，
    应用将大量请求发送到数据库层，导致数据库层的压力激增。
    
    第一个原因是：缓存中有大量数据同时过期，导致大量请求无法得到处理
        1. 我们可以避免给大量的数据设置相同的过期时间 
        2. 我们还可以通过服务降级，来应对缓存雪崩
            1. 当业务应用访问的是非核心数据（例如电商商品属性）时，暂时停止从缓存中查询这些数据，
                而是直接返回预定义信息、空值或是错误信息；
            2. 当业务应用访问的是核心数据（例如电商商品库存）时，仍然允许查询缓存，如果缓存缺失，
                也可以继续通过数据库读取。

    第二个原因是:除了大量数据同时失效会导致缓存雪崩，还有一种情况也会发生缓存雪崩，
                那就是，Redis缓存实例发生故障宕机了，无法处理请求，这就会导致大量请求一下子积压到数据库层，
                从而发生缓存雪崩
            1. 第一个建议，是在业务系统中实现服务熔断或请求限流机制：
                服务熔断虽然可以保证数据库的正常运行，但是暂停了整个缓存系统的访问
            
            2. 第二个建议就是事前预防：
                通过主从节点的方式构建Redis缓存高可靠集群

2. 缓存击穿
    缓存击穿是指，针对某个访问非常频繁的热点数据的请求，无法在缓存中进行处理，紧接着，访问该数据的大量请求，
    一下子都发送到了后端数据库，导致了数据库压力激增，会影响数据库处理其他请求。缓存击穿的情况，
    经常发生在热点数据过期失效时

    解决方法也比较直接，对于访问特别频繁的热点数据，我们就不设置过期时间了

3. 缓存穿透
    缓存穿透是指要访问的数据既不在Redis缓存中，也不在数据库中，导致请求在访问缓存时，
    发生缓存缺失，再去访问数据库时，发现数据库中也没有要访问的数据

    业务层误操作：缓存中的数据和数据库中的数据被误删除了，所以缓存和数据库中都没有数据；
    恶意攻击：专门访问数据库中没有的数据。

    1. 缓存空值或缺省值
    
    2. 使用布隆过滤器快速判断数据是否存在，避免从数据库中查询数据是否存在，减轻数据库压力
        首先，使用N个哈希函数，分别计算这个数据的哈希值，得到N个哈希值。
        然后，我们把这N个哈希值对bit数组的长度取模，得到每个哈希值在数组中的对应位置。
        最后，我们把对应位置的bit位设置为1，这就完成了在布隆过滤器中标记数据的操作

    3. 前端进行请求检测
        一个有效的应对方案是在请求入口前端，对业务系统接收到的请求进行合法性检测，
        把恶意的请求（例如请求参数不合理、请求参数是非法值、请求字段不存在）直接过滤掉，
        不让它们访问后端缓存和数据库

4. 跟缓存雪崩、缓存击穿这两类问题相比，缓存穿透的影响更大一些，希望你能重点关注一下
    从预防的角度来说，我们需要避免误删除数据库和缓存中的数据；
    从应对角度来说，我们可以在业务系统中使用缓存空值或缺省值、使用布隆过滤器，以及进行恶意请求检测等方法

    针对缓存雪崩，合理地设置数据过期时间，以及搭建高可靠缓存集群；
    针对缓存击穿，在缓存访问非常频繁的热点数据时，不要设置过期时间；
    针对缓存穿透，提前在入口前端实现恶意请求检测，或者规范数据库的数据删除操作，避免误删除。

问题：
    可以采用服务熔断、服务降级、请求限流的方法来应对。请你思考下，这三个机制可以用来应对缓存穿透问题吗?
